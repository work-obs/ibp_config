---
# Configure NVME storage for PostgreSQL (optional)

- name: Check if NVME configuration should be applied
  ansible.builtin.set_fact:
    nvme_available: "{{ enable_nvme and ansible_mounts | selectattr('mount', 'equalto', '/mnt/nvme') | list | length > 0 }}"

- name: Skip NVME configuration if not available
  ansible.builtin.debug:
    msg: "Skipping NVME configuration - /mnt/nvme is not mounted or not enabled"
  when: not nvme_available

- name: Create permissions script
  ansible.builtin.copy:
    src: permissions.sh
    dest: /var/lib/postgresql/permissions.sh
    owner: postgres
    group: postgres
    mode: '0755'
  when: nvme_available

- name: Create temp tablespace script
  ansible.builtin.copy:
    src: temp_tablespace.sh
    dest: /var/lib/postgresql/temp_tablespace.sh
    owner: postgres
    group: postgres
    mode: '0755'
  when: nvme_available

- name: Change ownership of /mnt/nvme
  ansible.builtin.file:
    path: /mnt/nvme
    owner: postgres
    group: postgres
    state: directory
  when: nvme_available

- name: Create systemd drop-in directory
  ansible.builtin.file:
    path: /etc/systemd/system/postgresql.service.d
    state: directory
    mode: '0755'
  when: nvme_available

- name: Create systemd nvme.conf
  ansible.builtin.copy:
    dest: /etc/systemd/system/postgresql.service.d/nvme.conf
    content: |
      [Service]
      ExecStartPre=/var/lib/postgresql/permissions.sh
      ExecStartPost=/var/lib/postgresql/temp_tablespace.sh
    mode: '0644'
  when: nvme_available
  notify: Reload systemd

- name: Run permissions script
  ansible.builtin.command:
    cmd: /var/lib/postgresql/permissions.sh
  when: nvme_available
